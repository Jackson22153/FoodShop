
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1000;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    resolver 127.0.0.11;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    #gzip  on;

    add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;

    server {
        listen       8060;
        #charset koi8-r;

        location /oauth2/ {
            proxy_pass ${OAUTH2_PROXY};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Auth-Request-Redirect ${REDIRECT_UI};
        }
        # authentication path
        location /oauth2/auth {
            internal;
            proxy_pass ${OAUTH2_PROXY};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Uri $request_uri;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header Content-Length "";
            proxy_pass_request_body off;
        }


        location = /login {
            auth_request /oauth2/auth;

            error_page 401 = /oauth2/sign_in?rd=${REDIRECT_UI};

            auth_request_set $user   $upstream_http_x_auth_request_user;
            auth_request_set $email  $upstream_http_x_auth_request_email;
            proxy_set_header X-User  $user;
            proxy_set_header X-Email $email;
            auth_request_set $token  $upstream_http_x_auth_request_access_token;
            proxy_set_header X-Access-Token $token;
        }

        location = /logout {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type';
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Content-Type' 'application/json';
                add_header 'Content-Length' '0';
                return 204;
            }

            if ($request_method != 'POST') {
                add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
                return 405;
            }

            proxy_pass ${OAUTH2_PROXY}/oauth2/sign_out;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        # default path
        location = / {
            add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Content-Type' 'application/json' always;
            return 200 "This is a gateway";
        }
        # 401 status code
        location @error401 {
            # by default the options request of preflight does not contain any credential information like session, cookie
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type';
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Content-Type' 'application/json';
                add_header 'Content-Length' '0';
                return 204;
            }

            add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Content-Type' 'application/json' always;
            return 401;
        }

        # shop service
        # home
        # upload image
        location ~ ^/shop/image/(category|product)/upload(/.*)?$ {
            auth_request oauth2/auth;

            error_page 401 = @error401;
            
            if ($request_method != 'POST') {
                return 405;
            }

            client_max_body_size 10M;

            proxy_pass ${SHOP_URL}/image/$1/upload$2$is_args$args;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Uri $request_uri;
            proxy_set_header X-Server-Port $server_port;
            add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
        }
        
        # authentication requirement path
        location ~ ^/shop/(category|product|discount|cart)(.*)$ {
            auth_request /oauth2/auth;

            error_page 401 = @error401;

            auth_request_set $token $upstream_http_x_auth_request_access_token;
            proxy_set_header Authorization "Bearer $token";
            proxy_pass_header Authorization;

            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            proxy_pass ${SHOP_URL}/$1$2$is_args$args;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
        }

        # other paths
        location ~ ^/shop/(?!category|product|discount|cart)(.*)$ {
            auth_request off;

            proxy_pass ${SHOP_URL}/$1$is_args$args;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
        }

        # account service
        # get image
        location ~ ^/account/image/(customer|employee)/(.*)?$ {
            auth_request off;

            proxy_pass ${ACCOUNT_URL}/image/$1/$2$is_args$args;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
        }
        # upload customer/employee image
        location ~ ^/account/(customer|employee)/image/upload(/.*)?$ {
            auth_request /oauth2/auth;

            error_page 401 = @error401;

            if ($request_method != 'POST') {
                return 405;
            }

            client_max_body_size 10M;

            auth_request_set $token $upstream_http_x_auth_request_access_token;
            proxy_set_header Authorization "Bearer $token";
            proxy_pass_header Authorization;

            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            
            proxy_pass ${ACCOUNT_URL}/$1/image/upload$2$is_args$args;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Uri $request_uri;
            proxy_set_header X-Server-Port $server_port;
        }
        # user
        location ~ ^/account/(customer|employee|user)(/.*)?$ {
            auth_request /oauth2/auth;

            error_page 401 = @error401;

            auth_request_set $token $upstream_http_x_auth_request_access_token;
            proxy_set_header Authorization "Bearer $token";
            proxy_pass_header Authorization;

            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            proxy_pass ${ACCOUNT_URL}/$1$2$is_args$args;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
        }
        # other paths
        location ~ ^/account/(?!customer|employee|user)(.*)?$ {
            auth_request /oauth2/auth;

            error_page 401 = @error401;

            auth_request_set $token $upstream_http_x_auth_request_access_token;
            proxy_set_header Authorization "Bearer $token";
            proxy_pass_header Authorization;

            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            proxy_pass ${ACCOUNT_URL}/$1$is_args$args;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
        }

        # order service
        # other paths
        location ~ ^/order(/.*)?$ {
            auth_request /oauth2/auth;

            error_page 401 = @error401;


            auth_request_set $token $upstream_http_x_auth_request_access_token;
            proxy_set_header Authorization "Bearer $token";
            proxy_pass_header Authorization;
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            proxy_pass ${ORDER_URL}$1$is_args$args;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
        }

        # notification
        # chat websocket
        location ~ ^/notification/chat(/.*)?$ {
            auth_request /oauth2/auth;

            error_page 401 = @error401;

            auth_request_set $token $upstream_http_x_auth_request_access_token;
            proxy_set_header Authorization "Bearer $token";
            proxy_pass_header Authorization;
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type';

            proxy_pass ${NOTIFICATION_URL}/chat$1$is_args$args;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Uri $request_uri;
            proxy_set_header X-Server-Port $server_port;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        # other paths
        location ~ ^/notification(/.*)?$ {
            auth_request /oauth2/auth;

            error_page 401 = @error401;

            auth_request_set $token $upstream_http_x_auth_request_access_token;
            proxy_set_header Authorization "Bearer $token";
            proxy_pass_header Authorization;
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            add_header 'Access-Control-Allow-Origin' ${ALLOWED_ORIGIN} always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            proxy_pass ${NOTIFICATION_URL}$1$is_args$args;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Uri $request_uri;
            proxy_set_header X-Server-Port $server_port;

        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        error_page 400 @error400;
    }
}
